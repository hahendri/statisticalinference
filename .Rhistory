install.packages("bootstrap")
?options
options(prompt = "R")
options(prompt = "R >")
options(prompt = "R>")
print wd
print(wd)
options(prompt = "R> ")
?wd
setwd(./desktop/Coursera)
ls
list.files
list.files()
cd ..
setwd("C:/Users/harla/Desktop/Coursera")
library(swirl)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(0.95)
?pnorm
pnorm(30 + z, mean = 30, lower.tail = FALSE)
pnorm(30 + z, mean = 32, lower.tail = FALSE)
pnorm(30 + z, mean = 32, sd = 1, lower.tail = FALSE)
pnorm(30 + z*2, mean = 32, sd = 2, lower.tail = FALSE)
power.t.test(n = 16, delta = 2 / 4, sd = 1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2, sd = 4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd = 200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = 0.8, delta = 2 / 4, sd = 1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = 0.8, delta = 2, sd = 4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = 0.8, delta = 100, sd = 200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = 0.8, n = 26, sd = 1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = 0.8, n = 27, sd = 1, type = "one.sample", alt = "one.sided")$delta
head(pValues)
sum(pValues < 0.5)
sum(pValues < 0.05)
p.adjust(pValues, sum(p.adjust(method = "bonferroni")))
skip()
sum(p.adjust(pValues, method = "BH") < 0.05)
tail(trueStatus)
table(pValues2<0.05, trueStatus)
24/476
24/500
table(p.adjust(pValues2<0.05, "bonferroni"), trueStatus)
table(p.adjust(pValues2, method = "bonferroni") < 0.05, trueStatus)
table(p.adjust(pValues2, method = "BH") < 0.05, trueStatus)
sum(1:6*(1/6))
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*B, replace = TRUE)
resam <- matrix(sam, B, nh)
meds <- apply(resam, 1, median)
fh-meds
median(meds)-median(fh)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians, c(0.025, 0.975))
quantile(meds, c(0.025, 0.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count-Cdata$count)
sample(group)
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
mean(perms > obs)
testStat(DEcounts, group)
perms <- sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))
sub <- c(1:6)
sub <- c(1:5)
dif <- c(40-32, 38-35, 50-51, 48-46, 35-30)
dif
?pnorm
g1 <- c(140, 138, 150, 148, 135)
g2 <- c(132, 135, 151, 146, 130)
t.test(g2, g1, paired = TRUE)
?t.test
t.test(g1, g2, paired = TRUE)
t.test(g1, g2, paired = TRUE, conf.level = 0.975)
?tnorm
?pnorm
pnorm(0.975, mean = 1100, sd = 30)
ts <- 1100/(30*sqrt(9))
ts
1100+c(-1,1)*ts
t <- 0.95
1100+c(-1,1)*ts*t
t <- quantile(0.95)
1100+c(-1,1)*ts*t
t <- q(0.95)
?qt
t <- qt(0.95)
t <- qt(0.975, df = 8)
t
1100+c(-1,1)*ts*t
t <- qt(0.95, df = 8)
1100+c(-1,1)*ts*t
prop.test(3, 2, 0.5, alternative = "two.sided", conf.level = 1)
?pbinom
qbinom(0.95, size = 4, prob = 0.5, lower.tail = FALSE)
qbinom(0.8, size = 4, prob = 0.5, lower.tail = FALSE)
qbinom(0.6, size = 4, prob = 0.5, lower.tail = FALSE)
qbinom(0.95, size = 4, prob = 0.5, lower.tail = true)
qbinom(0.95, size = 4, prob = 0.5, lower.tail = TRUE)
?qt
qbinom(3, size = 4, prob = 0.5, lower.tail = FALSE)
qbinom(3, size = 4, prob = 0.5, lower.tail = TRUE)
pbinom(3, size = 4, prob = 0.5, lower.tail = FALSE)
pbinom(3, size = 4, prob = 0.5, lower.tail = TRUE)
pbinom(3, size = 4, prob = 0.5, lower.tail = FALSE)
bi <- pbinom(3, size = 4, prob = 0.5, lower.tail = FALSE)
bi/2
bi <- pbinom(3, size = 4, prob = 0.75, lower.tail = FALSE)
bi
?ppois
ppois(1/100, 10/1787)
ppois(1/100, 10/1787, lower.tail = FALSE)
?poisson.test
ppois(1/100, 10/1787, lower.tail = FALSE)
ppois(1/100, 10/1787, lower.tail = FALSE) *2
ppois(10/1787, 0.01, lower.tail = FALSE)
ppois(10/1787, 1/100, lower.tail = FALSE)
poisson.test(10, T = 1787, r = 0.01, alternative = "greater")
poisson.test(10, T = 1787, r = 0.01, alternative = "less")
poisson.test(1, T = 100, r = 10/1787, alternative = "less")
poisson.test(1, T = 100, r = 10/1787, alternative = "greater")
ppois(10/1787, 0.01, lower.tail = FALSE)
ppois(9/1787, 0.01, lower.tail = FALSE)
ppois(9/1787, 0.01, lower.tail = FALSE)*2
?t.test
se <- sqrt((1.5^2/9)+(1.8^2/9))
md <- -3-1
pt(md/se, 16)
options(scipen=999)
pt(md/se, 16)
?pt
pt(md/se, df=16, lower.tail = TRUE)
pt(md/se, df=16, lower.tail = TRUE)
?rnorm
pt(6.61, 16)
pt(6.61, 16, lower.tail = FALSE)
?power.t.test
power.t.test(sd = 0.04, sig.level = 0.05, alternative = "one.sided")
power.t.test(sd = 0.04, sig.level = 0.05, alternative = "one.sided", n = 100)
power.t.test(sd = 0.04, sig.level = 0.05, alternative = "one.sided", n = 100, delta = 0.01)
power.t.test(sd = 0.04, sig.level = 0.05, alternative = "one.sided", n = 100, delta = 0.01)
power.t.test(sd = 0.04, sig.level = 0.1, alternative = "one.sided", power = 0.9, delta = 0.01)
power.t.test(sd = 0.04, sig.level = 0.1, alternative = "one.sided", power = 90, delta = 0.01)
power.t.test(sd = 0.04, sig.level = 0.05, alternative = "one.sided", power = 0.90, delta = 0.01)
power.t.test(sd = 0.04, sig.level = 0.05, alternative = "one.sided", power = 0.90, delta = 0.01, type = "one.sample")
power.t.test(sd = 0.04, sig.level = 0.05, alternative = "one.sided", n = 100, delta = 0.01, type = "one.sample")
power.t.test(sd = 0.04, sig.level = 0.1, alternative = "one.sided", n = 100, delta = 0.01, type = "one.sample")
setwd("C:/Users/harla/Desktop/Coursera/statisticalinference")
install.packages("miktex")
